#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct stu
{
	char name[20];
	int age;
};
int cmpint(const void* e1,const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}
int cmpfloat(const void* e1,const void* e2)
{
	return *(float*)e1 - *(float*)e2;
}
int cmpage(const void* e1,const void* e2)
{
	return ((struct stu*)e1)->age - ((struct stu*)e2)->age;
}
int cmpname(const void* e1,const void* e2)//比较名字就是在比较字符串，用strcmp函数
{
	return strcmp(((struct stu*)e1)->name,((struct stu*)e2)->name);
}
void test1()
{
	int arr[10] = {9,8,7,6,5,4,3,2,1};
	int sz = sizeof(arr)/sizeof(arr[0]);
	qsort(arr,sz,sizeof(arr[0]),cmpint);
	int i = 0;
	for(i = 0;i<sz;i++)
	{
		printf("%d\n",arr[i]);
	}
}
void test2()
{
	float f[] = {9.2,9.2,9.5,8.2,7.2,6.5,4.2,3.2,2.1};
	int sz = sizeof(f)/sizeof(f[0]);
	qsort(f,sz,sizeof(f[0]),cmpfloat);
	int j = 0;
	for(j=0;j<sz;j++)
	{
		printf("%f\n",f[j]);
	}
}
void test3()
{
	struct stu s[3] = {{"zhangsan",20},{"lisi",30},{"wangwu",10}};
	int sz = sizeof(s)/sizeof(s[0]);
	qsort(s,sz,sizeof(s[0]),cmpage);
  //第一个参数：待排序数组首元素地址
  //第二个参数：待排序元素个数
  //第三个参数：待排序数组每个元素的大小
  //第四个参数：是函数指针，比较两个元素的所用函数地址，这个函数使用者自己实现函数指针的两个参数是：带比较的两个元素的地址
}
int main()
{
	test1();
	test2();
	test3();
	return 0;
}
