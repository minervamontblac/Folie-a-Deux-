#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>


//数据存储
//int main()
//{
//	int a = 20;
//	//00000000000000000000000000010100 - 原码
//	//00000000000000000000000000010100 - 反码
//	//0000 0000 0000 0000 0000 0000 0001 0100 - 补码
//	//00000014
//	int b = -10;
//	//10000000000000000000000000001010 - 原码
//	//11111111111111111111111111110101 - 反码
//	//1111 1111 1111 1111 1111 1111 1111 0110 - 补码
//	//0xffffffff6
//	return 0;


//大端模式 大端字节序
//	数据低位在高地址 数据高位在低地址
//小端模式 小端字节序
//	数据低位在低地址 数据高位在高地址
//}
//int main()
//{
//	1 - 1;//1 + (-1)
//	//补码运算
//	return 0;
//}

//查看电脑存储方式
//int check()
//{
//	int a = 1;
//	return *(char*)&a;
//}
//int main()
//{
//	int  ret = check();
//	if(ret == 1)
//	{
//		printf("小端\n");
//	}
//	else
//	{
//		printf("大端\n");
//	}
//	return 0;
//}

//浮点类型的存储
//9.0
//1001.0
//(-1)^0*1.001*2^3
//(-1)^S*M*2^E
//float型
//S--1bit
//E--8bit
//M--23--bit
//double型
//S--1bit
//E--11bit
//M--52bit
//8bit E+127;11bit E+1023存储
//int main()
//{
//	int n = 9;
//	//0 00000000 00000000000000000001001
//	float *pfloat = (float*)&n;
//	printf("%d\n",n);
//	printf("%f\n",*pfloat);
//	//E全零 0.00000000000000000001001*2^-126
//
//	*pfloat = 9.0;
//	//1001.0
//	//(-1)^0*1.001*2^3
//	//0 10000010 00100000000000000000000
//	printf("%d\n",n);
//	//打印01000001000100000000000000000000
//	printf("%f\n",*pfloat);
//	return 0;
//}
